"use strict";(()=>{var e={};e.id=634,e.ids=[634],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2781:e=>{e.exports=require("stream")},3837:e=>{e.exports=require("util")},8678:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>b,patchFetch:()=>x,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>c,staticGenerationAsyncStorage:()=>y});var a={};r.r(a),r.d(a,{POST:()=>l});var i=r(9303),n=r(8716),u=r(670),s=r(3222),o=r(3570),d=r(7070),m=r(1482),p=r.n(m);async function l(e){let t;let{token:r,target:a}=await e.json();if(!r)return d.NextResponse.json({message:"Unauthorized"},{status:401});try{t=p().verify(r,"your-secret-key")}catch(e){return d.NextResponse.json({message:"Invalid or expired token"},{status:401})}await (0,s.Z)();let i=await o.Z.findOne({_id:t.userId});if(!i)return d.NextResponse.json({message:"User not found"},{status:404});if("myself"===a)return d.NextResponse.json({bmiData:i.bmi});{let e=i.friend.find(e=>e.Femail===a);return e?d.NextResponse.json({bmiData:e.Fbmi}):d.NextResponse.json({message:"Friend not found"},{status:404})}}let f=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/Bmi/getBmiData/route",pathname:"/api/Bmi/getBmiData",filename:"route",bundlePath:"app/api/Bmi/getBmiData/route"},resolvedPagePath:"C:\\Users\\Admin\\Downloads\\BMI\\app\\api\\Bmi\\getBmiData\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:y,serverHooks:c}=f,b="/api/Bmi/getBmiData/route";function x(){return(0,u.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:y})}},3222:(e,t,r)=>{r.d(t,{Z:()=>u});var a=r(1185),i=r.n(a);let n=!1,u=async()=>{let e="mongodb+srv://purnima3590:purnima@cluster1.0ytx8.mongodb.net/bmiNextjs?retryWrites=true&w=majority";if(!e)throw Error("Database URL not Defined");if(n){console.log("Alread Connected");return}try{await i().connect(e),console.log("Connected to DB"),n=!0}catch(e){console.log(e)}}},3570:(e,t,r)=>{r.d(t,{Z:()=>u});var a=r(1185),i=r.n(a);let n=new a.Schema({Name:{type:String,default:""},Email:{type:String,required:!1,default:""},Pass:{type:String,required:!1,default:""},bmi:[{Weight:{type:Number,required:!1,default:0},Height:{type:Number,required:!1,default:0},Age:{type:Number,required:!1,default:0},Gender:{type:String,required:!1,default:""},date:{type:Date},bmiValue:{type:Number,default:0}}],friend:[{Fname:{type:String,required:!1,default:""},Femail:{type:String,required:!1,default:""},Fbmi:[{Fheight:{type:Number,required:!1,default:0},Fage:{type:Number,required:!1,default:0},Fweight:{type:Number,required:!1,default:0},Fgender:{type:String,required:!1,default:""},date:{type:Date},FbmiValue:{type:Number,default:0}}]}]},{timestamps:!0}),u=i().models.bmiTable||i().model("bmiTable",n)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,972,482],()=>r(8678));module.exports=a})();
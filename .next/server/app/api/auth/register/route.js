"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},801:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>p,serverHooks:()=>c,staticGenerationAsyncStorage:()=>g});var a={};r.r(a),r.d(a,{POST:()=>l});var i=r(9303),u=r(8716),s=r(670),n=r(3222),o=r(3570),d=r(7070);async function l(e){try{let{Name:t,Email:r,Pass:a}=await e.json();if(await (0,n.Z)(),await o.Z.findOne({Email:r}))return d.NextResponse.json({message:"User already exists"},{status:400});let i=new o.Z({Name:t,Email:r,Pass:a,bmi:[],friend:[]});return await i.save(),d.NextResponse.json({message:"User registered successfully"},{status:201})}catch(e){return console.error("Error registering user:",e),d.NextResponse.json({message:"Error registering user"},{status:500})}}let p=new i.AppRouteRouteModule({definition:{kind:u.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Users\\Admin\\Downloads\\BMI\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:c}=p,f="/api/auth/register/route";function y(){return(0,s.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:g})}},3222:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(1185),i=r.n(a);let u=!1,s=async()=>{let e="mongodb+srv://purnima3590:purnima@cluster1.0ytx8.mongodb.net/bmiNextjs?retryWrites=true&w=majority";if(!e)throw Error("Database URL not Defined");if(u){console.log("Alread Connected");return}try{await i().connect(e),console.log("Connected to DB"),u=!0}catch(e){console.log(e)}}},3570:(e,t,r)=>{r.d(t,{Z:()=>s});var a=r(1185),i=r.n(a);let u=new a.Schema({Name:{type:String,default:""},Email:{type:String,required:!1,default:""},Pass:{type:String,required:!1,default:""},bmi:[{Weight:{type:Number,required:!1,default:0},Height:{type:Number,required:!1,default:0},Age:{type:Number,required:!1,default:0},Gender:{type:String,required:!1,default:""},date:{type:Date},bmiValue:{type:Number,default:0}}],friend:[{Fname:{type:String,required:!1,default:""},Femail:{type:String,required:!1,default:""},Fbmi:[{Fheight:{type:Number,required:!1,default:0},Fage:{type:Number,required:!1,default:0},Fweight:{type:Number,required:!1,default:0},Fgender:{type:String,required:!1,default:""},date:{type:Date},FbmiValue:{type:Number,default:0}}]}]},{timestamps:!0}),s=i().models.bmiTable||i().model("bmiTable",u)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,972],()=>r(801));module.exports=a})();